<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Sidebar Button Style -->
    <Style x:Key="SidebarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#444444" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#555555" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#666666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Management Button Style (for views like StamdataView) -->
    <Style x:Key="ManageButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#444444" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#555555" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#666666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="#007bff" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Border -->
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0069d9" />
                        </Trigger>
                        <!-- IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#0062cc" />
                        </Trigger>
                        <!-- IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#80c5ff" />
                            <Setter Property="Foreground" Value="#e0e0e0" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Success Button Style -->
    <Style x:Key="SuccessButton" TargetType="Button">
        <Setter Property="Background" Value="#28a745" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Border -->
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#218838" />
                        </Trigger>
                        <!-- IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1e7e34" />
                        </Trigger>
                        <!-- IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#94d3a2" />
                            <Setter Property="Foreground" Value="#e0e0e0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Danger Button Style -->
    <Style x:Key="DangerButton" TargetType="Button">
        <Setter Property="Background" Value="#dc3545" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Border -->
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#c82333" />
                        </Trigger>
                        <!-- IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#bd2130" />
                        </Trigger>
                        <!-- IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#eca0a7" />
                            <Setter Property="Foreground" Value="#e0e0e0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>